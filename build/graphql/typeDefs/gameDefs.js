"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.default = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Game {\n        id: ID!\n        slug: String!\n        scoreboard: [ScoreboardColumn!]!\n        dices: [Dice!]!\n        inTurn: InTurnPlayer!\n        status: GameStatus!\n        messages: [ChatMessage!]!\n        createdAt: Float!\n        finalResult: [Result!]!\n    }\n\n    type Result {\n        player: User!\n        score: Int!\n    }\n\n    type ScoreboardColumn {\n        player: User!\n        rows: [ScoreboardRow!]!\n    }\n\n    type ScoreboardRow {\n        name: String!\n        filled: Boolean!\n        score: Int!\n    }\n\n    type Dice {\n        value: Int!\n        selected: Boolean!\n    }\n\n    type InTurnPlayer {\n        player: User!\n        numberOfThrows: Int!\n        rolling: Boolean!\n    }\n\n    type ChatMessage {\n        timestamp: Float!\n        message: String!\n        user: User!\n    }\n\n    enum GameStatus {\n        created\n        started\n        ended\n    }\n\n    enum ScoreboardRowName {\n        Aces\n        Twos\n        Threes\n        Fours\n        Fives\n        Sixes\n        Sum\n        Bonus\n        Pair\n        TwoPairs\n        ThreeOfAKind\n        FourOfAKind\n        SmallStraight\n        LargeStraight\n        FullHouse\n        Chance\n        Yatzy\n        Total\n    }\n\n    extend type Query {\n        getGame(slug: String!): Game\n        getGameCount: Int\n    }\n\n    extend type Mutation {\n        createGame: Game\n        joinGame(slug: String!): Game\n        rollDices(slug: String!): Game\n        toggleDiceSelection(slug: String!, diceIndex: Int!): Game\n        postScore(slug: String!, rowName: ScoreboardRowName!): Game\n        newMessage(slug: String!, message: String!): Game\n    }\n\n    extend type Subscription {\n        gameDataChanged(slug: String!): Game\n    }\n"], ["\n    type Game {\n        id: ID!\n        slug: String!\n        scoreboard: [ScoreboardColumn!]!\n        dices: [Dice!]!\n        inTurn: InTurnPlayer!\n        status: GameStatus!\n        messages: [ChatMessage!]!\n        createdAt: Float!\n        finalResult: [Result!]!\n    }\n\n    type Result {\n        player: User!\n        score: Int!\n    }\n\n    type ScoreboardColumn {\n        player: User!\n        rows: [ScoreboardRow!]!\n    }\n\n    type ScoreboardRow {\n        name: String!\n        filled: Boolean!\n        score: Int!\n    }\n\n    type Dice {\n        value: Int!\n        selected: Boolean!\n    }\n\n    type InTurnPlayer {\n        player: User!\n        numberOfThrows: Int!\n        rolling: Boolean!\n    }\n\n    type ChatMessage {\n        timestamp: Float!\n        message: String!\n        user: User!\n    }\n\n    enum GameStatus {\n        created\n        started\n        ended\n    }\n\n    enum ScoreboardRowName {\n        Aces\n        Twos\n        Threes\n        Fours\n        Fives\n        Sixes\n        Sum\n        Bonus\n        Pair\n        TwoPairs\n        ThreeOfAKind\n        FourOfAKind\n        SmallStraight\n        LargeStraight\n        FullHouse\n        Chance\n        Yatzy\n        Total\n    }\n\n    extend type Query {\n        getGame(slug: String!): Game\n        getGameCount: Int\n    }\n\n    extend type Mutation {\n        createGame: Game\n        joinGame(slug: String!): Game\n        rollDices(slug: String!): Game\n        toggleDiceSelection(slug: String!, diceIndex: Int!): Game\n        postScore(slug: String!, rowName: ScoreboardRowName!): Game\n        newMessage(slug: String!, message: String!): Game\n    }\n\n    extend type Subscription {\n        gameDataChanged(slug: String!): Game\n    }\n"])));
var templateObject_1;
